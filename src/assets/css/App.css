/* Global Reset and Basic Styles */
body {
  margin: 0;
  padding: 0;
  font-family: "Roboto", sans-serif;
  /* Use theme colors - background will be set by MUI ThemeProvider */
  /* color will be set by MUI theme text.primary */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family:
    source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
}

/* App Specific Styles */
.App {
  text-align: left;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  /* Use theme background.default instead of hardcoded color */
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  /* color will be set by theme */
}

.logo {
  height: 100px;
  transition: transform 0.3s ease-in-out;
}

.logo:hover {
  transform: rotate(360deg);
}

/* Global Styles or in a CSS Module */
.journal-entry-day {
  /* Use theme calendar colors - will be moved to MUI component styling */
  border-radius: 50%;
}

.react-calendar .journal-entry-day {
  /* Calendar styling moved to theme - remove hardcoded colors */
}

/* Custom styles for react-calendar */
.react-calendar {
  border: none;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.react-calendar__tile {
  transition: background-color 0.3s;
  border-radius: 10px;
}

.react-calendar__tile--hover {
  /* Hover color moved to theme */
}

.journal-entry-day {
  /* Colors moved to theme */
  border-radius: 10px;
}

.container {
  /* Use theme background.container */
}

.card {
  margin-top: 16px;
  /* Background and styling moved to MUI Card component in theme */
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Prevent ResizeObserver loops by stabilizing layouts */
.MuiChip-root,
.MuiButton-root,
.MuiCard-root,
.MuiBox-root,
.MuiTypography-root,
.MuiAlert-root {
  /* Use transform instead of changing dimensions when possible */
  will-change: transform;
  transform: translateZ(0); /* Force hardware acceleration */
  /* Prevent layout thrashing */
  contain: layout style;
}
